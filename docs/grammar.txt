1. <program> -> <prolog> <list_of_statements>
2. <prolog> -> <?php declare(strict_types=1);
3. <list_of_statements> -> EOF
4. <list_of_statements> -> <statement> <list_of_statements> 
5. <statement> -> <function_definition>
6. <statement> -> <variable_definition>
7. <statement> -> <function_call>
8. <statement> -> if ( <expression> ) { <list_of_statements> } else { <list_of_statements> }
9. <statement> -> while ( <expression> ) { <list_of_statements> }
10. <statement> -> return <return_expressions>;
11. <statement> -> <expression>;
12. <return_expressions> -> <expression>
13. <return_expressions> -> <variable>
14. <function_definition> -> function ID( <list_of_parameters> ) : <list_of_datatypes_ret> { <list_of_statements> }
15. <variable_definition> -> <variable> = <var_def_expr>
16. <var_def_expr> -> <function_call>
17. <var_def_expr> -> <expression>;
18. <function_call> -> ID( <list_of_call_parameters> );
19. <list_of_call_parameters> -> ε
20. <list_of_call_parameters> -> <call_parameter> <list_of_call_parameters_n>
21. <call_parameter> -> <variable>
22. <call_parameter> -> "string" 
23. <list_of_call_parameters_n> -> , <call_parameter> <list_of_call_parameters_n>
24. <list_of_call_parameters_n> -> ε 
25. <list_of_parameters> -> ε
26. <list_of_parameters> -> <parameter> <list_of_parameters_n>
27. <parameter> -> <list_of_datatypes> <variable>
28. <list_of_datatypes> -> int
29. <list_of_datatypes> -> bool
30. <list_of_datatypes> -> float
31. <list_of_datatypes> -> string
32. <list_of_datatypes> -> nil
33. <variable> -> $ID
34. <list_of_parameters_n> -> ε
35. <list_of_parameters_n> -> , <parameter> <list_of_parameters_n>
36. <list_of_datatypes_ret> -> void
37. <list_of_datatypes_ret> -> <list_of_datatypes>

* 'string' is a pseudoterm


A  ::= B C
B  ::= php
C  ::= ''
C  ::= D C
D  ::= E
D  ::= F 
D  ::= G 
D  ::= if ( expr ) { C } else { C }
D  ::= while ( expr ) { C }
D  ::= return H
H  ::= expr
H  ::= M
E  ::= function id ( K ) : L { C }
F  ::= M = Z
Z  ::=  expr ;
Z  ::= G
G  ::= id ( N ) ;
N  ::= ''
N  ::= O N'
O  ::= M
O  ::= str
N' ::= , O N'
N' ::= ''
K  ::= ''
K  ::= P K'
P  ::= Q M
Q  ::= int
Q  ::= bool
Q  ::= float
Q  ::= string
Q  ::= nil
M  ::= %id
K' ::= ''
K' ::= , P K'
L  ::= void
L  ::= Q



// declare(strict_types=1);

// Prec. table
1. E -> id
2. E -> ( E )
3. E -> E * E
4. E -> E / E
5. E -> E + E
6. E -> E - E
7. E -> E . E
8. E -> E > E
9. E -> E >= E
10. E -> E < E
11. E -> E <= E
12. E -> E === E
13. E -> E !== E
14. E -> E = E